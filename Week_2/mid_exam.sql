-- question-2:
SELECT e.FIRST_NAME, m.MANAGER_ID
FROM EMPLOYEES AS e
	JOIN EMPLOYEES AS m
    ON e.EMPLOYEE_ID = m.MANAGER_ID;  

-- question 3:
CREATE DATABASE MID_EXAM;
USE MID_EXAM;
CREATE TABLE Employees(
	Employee_ID CHAR(10) PRIMARY KEY,
    First_Name VARCHAR(30),
    Last_Name VARCHAR(30),
    Date_of_Birth VARCHAR(30),
    Department_Id CHAR(10),
    Salary NUMERIC(10,3)
);
CREATE TABLE Projects(
	Project_ID CHAR(10) PRIMARY KEY,
    Project_Name VARCHAR(60),
    Start_Date DATE,
    End_Date DATE,
    Budget NUMERIC(10,3)
);
CREATE TABLE Employee_Projects(
	Employee_ID CHAR(10),
    Project_ID CHAR(10),
    PRIMARY KEY(Employee_ID, Project_ID),
    FOREIGN KEY(Employee_ID) REFERENCES Employees(Employee_ID),
    FOREIGN KEY(Project_ID) REFERENCES Projects(Project_ID)
);

-- question-4: 
SELECT salary
FROM EMPLOYEES
WHERE SALARY = (
	SELECT MAX(SALARY)
	FROM EMPLOYEES 
    WHERE SALARY < (
		SELECT MAX(SALARY)
		FROM EMPLOYEES
        WHERE SALARY < (
			SELECT MAX(SALARY)
			FROM EMPLOYEES
		)
	)
);

-- question-5:
SELECT D.DEPARTMENT_NAME, COUNT(E.EMPLOYEE_ID) AS EMPLOYEE_COUNT
FROM DEPARTMENTS AS D
	JOIN EMPLOYEES AS E
		ON D.DEPARTMENT_ID = E.DEPARTMENT_ID
GROUP BY D.DEPARTMENT_NAME;

-- question-6: 
SELECT E.FIRST_NAME, D.DEPARTMENT_NAME
FROM EMPLOYEES AS E
	CROSS JOIN DEPARTMENTS AS D
		ON E.DEPARTMENT_ID = D.DEPARTMENT_ID;

-- question-7: 
WITH CTE_EX AS (
	SELECT FIRST_NAME
	FROM EMPLOYEES
	WHERE SALARY > (
		SELECT AVG(SALARY)
		FROM EMPLOYEES
	)
)
SELECT *
FROM CTE_EX;

-- question-8:
SELECT FIRST_NAME, LAST_NAME
FROM EMPLOYEES
WHERE SALARY < (
	SELECT SALARY
    FROM EMPLOYEES
    WHERE FIRST_NAME = 'Steven' AND LAST_NAME = 'King'
);

-- question-9:
SELECT D.DEPARTMENT_NAME, E.FIRST_NAME AS MANAGER_NAME
FROM DEPARTMENTS AS D
	JOIN EMPLOYEES AS E
    ON D.MANAGER_ID = E.EMPLOYEE_ID;
    
 -- question-10: 
SELECT DISTINCT L.CITY
FROM DEPARTMENTS AS D
	JOIN LOCATIONS AS L
    ON D.LOCATION_ID = L.LOCATION_ID;
